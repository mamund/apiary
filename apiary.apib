HOST: http://amundsen.com/

--- Sample To-Do Hypermedia API ---
---
Welcome to the our API. Comments support [Markdown](http://daringfireball.net/projects/markdown/syntax) syntax
---

-- To Do List -- 
-- 

- inline HTML (FAIL)

This is a regular paragraph.

<table>
    <tr>
        <td>Foo</td>
    </tr>
</table>

This is another regular paragraph.

- automatic escaping of special characters:

http://images.google.com/images?num=30&q=larry+bird

- Block Level Elements

This is an H1
=============

This is an H2
-------------

# This is an H1

## This is an H2

###### This is an H6

# This is an H1 #

## This is an H2 ##

### This is an H3 ######

- Block quotes (FAIL)

> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
> consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
> Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
> 
> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
> id sem consectetuer libero luctus adipiscing.

- Nested block quotes (FAIL)

> This is the first level of quoting.
>
> > This is nested blockquote.
>
> Back to the first level.

- Unordered lists

+   Red
+   Green
+   Blue

- Ordered Lists (FAIL)

1.  Bird
2.  McHale
3.  Parish

- Code blocks

This is a normal paragraph:

    This is a code block.

- Horizontal Rules

* * *

***

*****

- - -

---------------------------------------

- Links

This is [an example](http://example.com/ "Title") inline link.

[This link](http://example.net/) has no title attribute.

- Italics

*single asterisks*

_single underscores_

- Bold (FAIL)

**double asterisks**

__double underscores__

- Inline Code

Use the `printf()` function.

![mca photo](http://amundsen.com/images/mca-photos/mca-icon-d.jpg "MCA Photo")

--
GET /todo/
> Accept: text/html
> Authorization: Basic xxxxxxxxxxxxxxxxxxxx
< 200
< Content-Type: text/html
<dl class="collection">
  <dt><a href="." class="add">add new item</a></dt>
  <dt><form action="."><label for="filter">filter:<input name="filter"></label><input type="submit" /></form></dt>
  <dt><a href="./1" class="item">1</a></dt>
  <dd>
    <span class="title">this is title 1</span>
  </dd>
  <dt><a href="./2" class="item">2</a></dt>
  <dd>
    <span class="title">this is title 2</span>
  </dd>
</dl>


GET /todo/?filter=fish
> Accept: text/html
> Authorization: Basic xxxxxxxxxxxxxxxxxxxx
< 200
< Content-Type: text/html
<dl class="collection">
  <dt><a href="." class="add">add new item</a></dt>
  <dt><a href="33" class="item">33</a></dt>
  <dd>
    <span class="title">this is a fish</span>
  </dd>
  <dt><a href="44" class="item">44</a></dt>
  <dd>
    <span class="title">this is a fish, too</span>
  </dd>
</dl>


GET /todo/1
> Accept: text/html
> Authorization: Basic xxxxxxxxxxxxxxxxxxxx
< 200
< Content-Type: text/html
<dl class="collection">
  <dt><a href="/todo/" class="home">home</a></dt>
  <dt><a href="1" class="item">1</a></dt>
  <dd>
    <span class="title">this is title 1</span>
  </dd>
</dl>


POST /todo/
> Accept: text/thml
> Authorization: Basic xxxxxxxxxxxxxxxxxxxx
> Content-Type: application/x-www-form-urlencoded
title=this+is+a+new+title
< 201
< Location: /todo/99


PUT /todo/1
> Accept: text/html
> Authorization: Basic xxxxxxxxxxxxxxxxxxxx
> Content-Type: application/x-www-form-urlencoded
title=this+is+a+new+title+1
< 200
< Content-Type: text/html
<dl class="collection">
  <dt><a href="1" class="item">1</a></dt>
  <dd>
    <span class="title">this is a new title 1</span>
  </dd>
</dl>

DELETE /todo/1
> Accept: text/html
> Authorization: Basic xxxxxxxxxxxxxxxxxxxx
< 204
< Content-Type: text/html

